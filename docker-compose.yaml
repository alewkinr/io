version: '3'

networks:
  shared:
    external: false

volumes:
  pg-data:
  legal-data:

services:
  postgres:
    image: postgres:10.5
    restart: always
    container_name: postgres
    networks:
      - shared
    volumes:
      - "./infra/postgres/data:/var/lib/postgresql/data"
    ports:
      - 5432:5432
    env_file:
      - ./infra/postgres/.env


  legal-db:
    image: postgres:10.5
    restart: always
    container_name: legal-db
    networks:
      - shared
    volumes:
      - "./infra/legal_db/data:/var/lib/postgresql/data"
    ports:
      - 6432:5432
    env_file:
      - ./infra/legal_db/.env


  legal:
    image: docker.pkg.github.com/alewkinr/io/legal:latest
    hostname: legal
    build:
      context: back/legal-service
      dockerfile: Dockerfile
    container_name: legal
    restart: always
    depends_on:
      - legal-db
    env_file:
      - back/legal-service/.env
    networks:
      - shared
    ports:
      - 7070:8080
    volumes:
    - "./back/legal-service:/service"


  license-supervisor:
    image: docker.pkg.github.com/alewkinr/io/license-supervisor:latest
    restart: always
    container_name: license-supervisor
    build:
      context: back/license-supervisor
      dockerfile: Dockerfile
    command: /supercronic /crontab
    networks:
      - shared
    volumes:
      - "./back/license-supervisor:/service"


  auth:
    image: docker.pkg.github.com/alewkinr/io/auth:latest
    build:
      context: back/auth-service
      dockerfile: Dockerfile
    container_name: auth
    restart: always
    depends_on:
      - postgres
    env_file:
      - back/auth-service/.env
    networks:
      - shared
    ports:
      - 9090:8080
    volumes:
    - "./back/auth-service:/service"


  upload:
    image: docker.pkg.github.com/alewkinr/io/upload:latest
    build:
      context: back/upload-service
      dockerfile: Dockerfile
    container_name: upload
    restart: always
    depends_on:
      - postgres
    env_file:
      - back/upload-service/.env
    networks:
      - shared
    ports:
      - 8080:8080
    volumes:
    - "./back/upload-service:/service"

  queue:
    image: rabbitmq:3
    container_name: queue
    ports:
      - 5672:5672
    env_file:
      - ./infra/queue/.env